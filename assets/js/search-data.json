{
  
    
        "post0": {
            "title": "Python RapidAPI",
            "content": "| JS Table | Using the JS Kernel | API | . . Python, RapidAPI Terms . APIs and tooling like Jupyter docs allows many opportunities in fields like Data Science. As more and more developers use APIs, they build standards in how you setup a client, send requests and receive information... . Getting an API . To begin the API journey. You need to find an API provider. . RapidAPI is a great option. You must setup and account, but there are many free options. | Goto this page for starters, the RapidAPI Hub- Under Code Snippets pick Python - Requests | . RapidAPI, you will select Python Requests type of code to work with you Notebook. . The url is the endpoint to which the API is directed | The headers is a dictionary data structure to send special messaging to the endpoint | The requests.request() python function is used to send a request and retrieve their responses | The response variable receives result of of the request in JSON text | . Next step, is to format the response according to your data science needs . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests &quot;&quot;&quot; RapidAPI is the world&#39;s largest API Marketplace. Developers use Rapid API to discover and connect to thousands of APIs. &quot;&quot;&quot; url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &#39;x-rapidapi-key&#39;: &quot;dec069b877msh0d9d0827664078cp1a18fajsn2afac35ae063&quot;, &#39;x-rapidapi-host&#39;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } # Request Covid Data response = requests.request(&quot;GET&quot;, url, headers=headers) #print(response.text) # uncomment this line to see raw data # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . VASE Project API . This API shows publications, symptoms, treatment, funding, and grants for medical and health. . import requests url = &quot;https://diagnosis.p.rapidapi.com/api/DDxItems/GetSymptoms&quot; querystring = {&quot;AuthenticationID&quot;:&quot;DEMO_AuthenticationID&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;59ac7d2cadmsh664b50412aa531bp133fd0jsn1da9685dbdb5&quot;, &quot;X-RapidAPI-Host&quot;: &quot;diagnosis.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) #print(response.json()) for symptom in response.json(): #print(symptom) stext = symptom.get(&quot;symptom&quot;) if (&quot;[&quot; not in stext): print(stext.strip() + &quot;: &quot; + symptom.get(&quot;category&quot;)) . rapid breathing: Breathing hurried respiration: Breathing hyperventilation: Breathing overbreathing: Breathing breathing faster or deeper than normal: Breathing increased breathing rate: Breathing hurried breathing: Breathing labored and unusually rapid breathing: Breathing lethargy: Catastasis confusion: Cognitive problems anxiety: Cognitive problems turmoil: Cognitive problems tumult: Cognitive problems disarray: Cognitive problems commotion: Cognitive problems agitation: Cognitive problems restlessness: Cognitive problems disorientation: Cognitive problems nervousness: Cognitive problems stupor: Catastasis coma: Catastasis easy fatigue: Catastasis shortness of breath: Breathing wheezing: Breathing dyspnea: Breathing dyspnoea: Breathing breathlessness: Breathing apnea: Breathing wheeze: Breathing labored breathing: Breathing chest tightness: Breathing sleepiness: Catastasis hand tremor: Muscles hand trembling: Muscles hand shiver: Muscles hand shudder: Muscles hand tremble: Muscles hand thrill: Muscles lightheadedness: Catastasis muscle twitching: Muscles muscular contraction: Muscles clonus: Muscles tick: Muscles teak: Muscles tic: Muscles ticking: Muscles drill: Muscles nausea: Catastasis vomiting: Catastasis vomit: Catastasis emesis: Catastasis retching: Catastasis puke: Catastasis vomitus: Catastasis numbness or tingling in the face: Muscles numbness or tingling in the hands: Muscles numbness or tingling in the feet: Muscles muscle spasms: Muscles tetany: Muscles tetanilla: Muscles muscle cramp: Muscles muscle convulsion: Muscles muscle kink: Muscles convulsions: Muscles fever: Catastasis low blood pressure: Catastasis hypotension: Catastasis blood in urine: Blood protein in the urine: Urination proteinuria: Urination blood in the stool: Blood headache: Pains migraine: Pains cephalgia: Pains cephalalgia: Pains woe: Pains encephalalgia: Pains small red dots on the skin: Skin mucosal bleeding: Blood epistaxis: Blood bleeding from the nose: Blood nose bleeding: Blood gums bleeding: Blood mouth bleeding: Blood nosebleed: Blood blackening of the skin: Skin chest pain: Pains cardiac pain: Pains angina: Pains chest pain on exertion: Pains tightness: Pains squeezing sensation of the chest: Pains coughing up blood: Blood difficulty breathing: Breathing trouble breathing: Breathing abdominal pain: Pains decreased body hair: Skin baldness: Skin hair loss: Skin alopecia: Skin calvities: Skin acomia: Skin loss of hair: Skin thinning hair: Skin balding: Skin dehydration: Catastasis diarrhea: Stools frequent bowel movements: Stools flux: Stools looseness: Stools scour: Stools intermittent diarrhea: Stools constipation: Stools fainting: Catastasis unconsciousness: Catastasis loss of consciousness: Catastasis apsychia: Catastasis faintness: Catastasis insensibility: Catastasis faint: Catastasis syncope: Catastasis swoon: Catastasis fainting-fit: Catastasis near fainting: Catastasis fatigue: Catastasis hyperpigmentation: Skin dark patches of skin: Skin darkening of the skin that&#39;s not related to sun exposure: Skin darkening of skin color: Skin discoloration: Skin freckles: Skin mottled skin: Skin joint aches: Pains muscle aches: Pains muscle pain: Pains muscle soreness: Pains low blood sugar: Catastasis muscle weakness: Muscles myasthenia: Muscles weight loss: Catastasis salt craving: Appetite foamy urine: Urination hands swelling: Skin feet swelling: Skin face swelling: Skin swelling: Skin edema: Skin hypostasis: Skin puffy face: Skin swollen face: Skin edematous face: Skin hydropic face: Skin dropsical face: Skin succulent face: Skin abdomen swelling: Abdomen redness: Skin reddening: Skin redden: Skin rubor: Skin rubeosis: Skin ruddiness: Skin skin redness: Skin pain: Pains pale skin: Skin pallor: Skin paleness: Skin whiteness: Skin pallescence: Skin feebleness: Skin pale-looking skin: Skin fast heartbeat: Heart irregular heartbeat: Heart arrhythmia: Heart arhythmia: Heart anisorhythmia: Heart abnormal heart rhythm: Heart cognitive problems: Cognitive problems loss of higher reasoning: Cognitive problems difficulties with judgment and reasoning: Cognitive problems forgetfulness: Cognitive problems learning disabilities: Cognitive problems problems with comprehension or understanding: Cognitive problems concentration difficulties: Cognitive problems decreased intelligence: Cognitive problems impaired arithmetic, organizational, and language skills: Cognitive problems problems performing multiple tasks: Cognitive problems behavioral and emotional changes: Cognitive problems delirium: Cognitive problems delusion: Cognitive problems ravings: Cognitive problems drivel: Cognitive problems rave: Cognitive problems wanderings: Cognitive problems cold extremities: Catastasis brittle nails: Tissues nail abnormalities: Tissues nail dystrophy: Tissues thickened nails: Tissues pitted or ridged nails: Tissues disfiguring nails: Tissues spoon-shaped nails: Tissues swollen tongue: Tissues enlarged tongue: Tissues sore tongue: Tissues cracks or ulcers at the corners of the mouth: Oral craving to eat unusual non-food substances such as ice or dirt: Appetite slow reflexes: Catastasis slow reaction: Catastasis loss of balance: Vestibular unsteady walking: Vestibular unsteady gait: Vestibular difficulty walking: Vestibular depression: Cognitive problems dementia: Cognitive problems aphrenia: Cognitive problems feeble-mindedness: Cognitive problems mental debility: Cognitive problems prolonged bleeding: Blood easy bruising: Skin bruise: Skin mar: Skin extravasation: Skin hematoma: Skin purplish bruises caused by bleeding under the skin: Skin increased number and severity of infections: Catastasis pulmonary hypertension: Heart increased pressure over the pulmonary artery: Heart ventricular heart failure: Heart blindness: Catastasis Loss of vision: Catastasis deafness: Catastasis facial feature abnormalities: Catastasis larger and broader facial features: Catastasis coarse facial features: Catastasis thickening of the lips tongue and nostrils: Catastasis broad nose and flared nostrils: Catastasis inability to feel pain: Pains stillbirth: Obstetric dead birth: Obstetric absence of brain: Brain malformation of brainstem: Brain absence of skull bone normally surrounding the brain: Brain neonatal death: Obstetric newborn death: Obstetric death of newborn: Obstetric loss of appetite: Appetite numbness: Catastasis pain in the lower back: Pains pain in hips: Pains stiffness in the lower back: Pains stiffness in hips: Pains reddened eyes: Eyes eye pain: Eyes pressure in eyes: Eyes pain during eye movement: Eyes optic neuritis: Eyes sensitivity to light: Eyes blurred vision: Eyes diffuse vision: Eyes indistinct vision: Eyes nebulous vision: Eyes reduced vision: Eyes vision abnormalities: Eyes disturbed vision: Eyes heart valve inflammation: Heart coughing: Breathing cough: Breathing hacking cough: Breathing persistent cough: Breathing dry cough: Breathing coughing at night: Breathing wheezing or coughing after exercise: Breathing short breath during exercise: Breathing shortness of breath with activity: Breathing trouble sleeping: Catastasis cramps: Abdomen gripe: Abdomen cramp: Abdomen griping: Abdomen bellyache: Abdomen wring: Abdomen itchy eyes: Eyes sore throat: Oral tickle in the throat: Oral itchy throat: Oral itchy roof of mouth: Oral sneezing: Breathing joint swelling: Pains joint stiffness: Pains joint redness: Pains deformed joints: Pains joint cracking: Pains joint creaking: Pains joint tenderness: Pains joint loss of flexibility: Pains joint grating sensation: Pains joint bone spurs: Pains sores: Skin boils: Skin pus in hair follicles: Skin abscesses: Skin carbuncles: Skin sty: Skin impetigo: Skin granulomas: Skin chills: Catastasis shaking chills: Catastasis chill: Catastasis rigor: Catastasis shakes: Catastasis dither: Catastasis algor: Catastasis sweating: Skin lower-than-normal body temperature: Catastasis low body temperature: Catastasis chest pain that fluctuates with breathing: Breathing sluggishness: Catastasis tardiness: Catastasis deliberation: Catastasis sloth: Catastasis heaviness: Catastasis non mentally alert: Catastasis non-vigilantly attentive: Catastasis non-watchful: Catastasis dry skin: Skin weight gain: Catastasis get fat: Catastasis muscle tenderness: Muscles muscle stiffness: Muscles muscle wasting: Muscles rigid muscles: Muscles menorrhagia: Blood sensitivity to cold: Catastasis intolerance to cold: Catastasis blood in the vomit: Blood hoarse voice: Breathing raucous voice: Breathing husky voice: Breathing throaty voice: Breathing wheezy voice: Breathing gruff voice: Breathing hoarseness: Breathing deepened voice: Breathing high cholesterol: Blood irritability: Cognitive problems irascibility: Cognitive problems petulance: Cognitive problems temper: Cognitive problems impatience: Cognitive problems peevishness: Cognitive problems sensitivity to heat: Catastasis thyroid gland enlargement: Catastasis goiter: Catastasis change in menstrual cycles: Sexual erectile dysfunction: Sexual male impotence: Sexual reduced libido: Sexual sexual dysfunction: Sexual decreased libido: Sexual decreased sexual interest: Sexual low sex drive: Sexual bulging eyes: Eyes dry eyes: Eyes irritated eyes: Eyes gritty sensation in the eyes: Eyes eyes that are burn itch or feel gritty: Eyes puffy eyelids: Eyes double vision: Eyes limited eye movements: Eyes corneal ulcer: Eyes ulcers on the cornea: Eyes ulcerative keratitis: Eyes eyesore: Eyes reddening and thickening of the skin: Skin weak urine stream: Urination decreased force in the stream of urine: Urination slow urine flow: Urination trouble urinating: Urination frequent urination: Urination urgent need to urinate: Urination urinary urgency: Urination loss of bladder control: Urination urge to urinate: Urination needing to urinate more often than normal: Urination increased frequency of urination at night: Urination not being able to completely empty the bladder: Urination continuous feeling of a full bladder: Urination urinary tract infection: Urination formation of stones in the bladder: Urination reduced kidney function: Urination dark urine: Urination dark-colored urine: Urination blood in the semen: Blood pain in the pelvic area: Pains pelvic pain: Pains pelvis pain: Pains discomfort in the pelvic area: Pains pain or discomfort of the penis or testicles: Pains pain in the groin: Pains bone pain: Pains pain when urinating: Pains burning sensation when urinating: Pains dysuria: Pains burning feeling when urinate: Pains painful urination: Pains pain in the area between the scrotum and rectum: Pains painful orgasms: Pains painful ejaculations: Pains pain during sexual intercourse: Pains pain during intercourse: Pains pyuria: Urination flank pain: Pains over the kidneys pain: Pains pain felt near the kidneys: Pains tumor: Skin soreness: Catastasis morbidity: Catastasis painfulness: Catastasis sickliness: Catastasis morbidness: Catastasis delicacy: Catastasis itching: Skin unusual discharge from the genitals: Urination heavy bleeding from small cuts or dental work: Blood swollen lymph nodes: Tissues lymphadenitis: Tissues lymph nodes swelling: Tissues swollen lymph glands: Tissues enlarged lymph nodes: Tissues enlarged liver: Tissues swollen spleen: Tissues spleen swelling: Tissues enlarged spleen: Tissues swollen kidneys: Tissues swollen testicles: Tissues testicles swelling: Tissues swelling and/or lump in one or both of the testes: Tissues seizures: Catastasis pain, numbness, weakness or coldness in legs or arms: Catastasis leg pain: Catastasis sudden numbness or weakness in arms or legs: Catastasis fluttering in chest: Heart slow heartbeat: Heart bradycardia: Heart heart murmur: Heart pale gray or blue skin color: Skin cyanosis: Skin asphyxia: Skin bluishness: Skin cyanose: Skin gray-blue skin: Skin clammy bluish-colored skin: Skin ankles swelling: Skin easily becoming short of breath during exercise or activity: Catastasis easily tiring during exercise or activity: Catastasis built-up fluid in the heart or lungs: Heart bloating of the abdomen with fluid: Abdomen bloating: Abdomen abdominal bloating: Abdomen abdominal distention: Abdomen abdominal cramps and gas: Abdomen increase in the size of abdomen: Abdomen bloating after meals: Abdomen pericarditis, which affects the tissue surrounding the heart: Heart myocarditis, which affects the muscular middle layer of the walls of the heart: Heart myocardium: Heart endocarditis, which affects the inner membrane that separates the chambers and heart valves: Heart anemia: Catastasis indigestion: Stools skin rash: Skin itchy and blistering skin: Skin blisters: Skin hives: Skin mouth sores: Oral tooth pain: Oral tooth ache: Oral dental condition: Oral bone fracture: Pains stooped posture: Catastasis curved spine: Catastasis hunched: Catastasis foul-smelling or grayish stools that may be fatty or oily: Stools stunted growth: Catastasis reduced growth rate in human development: Catastasis delayed growth or sexual development in children: Catastasis growth retardation: Catastasis growth failure: Catastasis delayed puberty: Catastasis poor growth: Catastasis changes in dental enamel: Oral flatulence: Stools meteorism: Stools flatulency: Stools tympanites: Stools aerocolia: Stools tympania: Stools jaundice: Skin clay-coloured feces: Stools clay-colored stool: Stools pale-colored stool: Stools putty-colored stool: Stools pale bowel movements: Stools tenderness in the area of liver: Pains recurring respiratory infections: Breathing repeated lung infections: Breathing barrel-shaped chest: Catastasis milky nipple discharge: Sexual milky white discharge from nipples unrelated to breastfeeding: Sexual breast milk production: Sexual galactohhrea: Sexual spontaneous flow of milk from the breast: Sexual excess facial hair: Skin greasy hair: Skin oily skin: Skin acne: Skin small red or purplish acne: Skin breakouts on the shoulders and back: Skin more frequent acne: Skin gynecomastia: Tissues bad breath: Breathing cutaneous striae in the deltopectoral area: Skin increased body hair: Skin increased length and thickness in hair (on body parts other than the head): Skin skin eruptions: Skin drastic appetite shifts: Appetite appetite changes: Appetite extreme hunger or lessened/loss of appetite: Appetite overeating or undereating: Appetite disrupted sleep patterns: Catastasis needle stick marks in the buttocks, thighs, or deltoids: Skin increased muscle size: Muscles testicular atrophy: Sexual hyperactivity: Catastasis high blood pressure: Catastasis elevated blood pressure: Catastasis hypertension: Catastasis regurgitation: Abdomen heartburn: Abdomen pyrosis: Abdomen brash: Abdomen epigastric burning: Abdomen water brash: Abdomen sour taste in mouth: Abdomen esophageal reflux: Abdomen difficulty swallowing: Abdomen painful swallowing: Abdomen odynophagia: Abdomen pink or purple stretch marks (striae) on the skin of the abdomen, thighs, breasts and arms: Skin slow skin healing: Skin slow healing of cuts; insect bites and infections: Skin poor wound healing: Skin sores that are not heal: Skin palpitations: Heart enlarged clitoris: Sexual hallucinations: Cognitive problems paranoia: Cognitive problems red urine: Urination skin swelling: Skin decreased urine output: Urination restless legs syndrome: Cognitive problems painful menstruation: Pains kidney stones: Urination renal calculi: Urination excessive thirst: Catastasis fruity-scented breath: Breathing fruity odor to the breath: Breathing smell fruity breath: Breathing fruity breath odor: Breathing abdominal pain that radiates to back: Pains abdominal pain that feels worse after eating: Pains abdominal symptoms that occur within minutes after a meal: Pains social withdrawal: Cognitive problems lack of motivation or focus: Cognitive problems absence in desire: Cognitive problems lack of enthusiasm: Cognitive problems deficiency in desire: Cognitive problems inability to urinate: Urination increased hunger: Appetite increased appetite: Appetite tender breasts: Pregnancy increased urine output: Urination excretion of an excessive amount of diluted urine: Urination excessive urine production: Urination cramping: Pregnancy no signs of pregnancy: Pregnancy loss of pregnancy symptoms: Pregnancy frequent contractions - a tightening sensation in the abdomen: Pregnancy constant low dull backache: Pregnancy sensation of pelvic or lower abdominal pressure: Pregnancy mild abdominal cramps: Pregnancy watery vaginal discharge (water breaking): Pregnancy change in vaginal discharge: Pregnancy change in color: Pregnancy odor or amount of discharge from vagina: Pregnancy shoulder pain: Pains an urge to have a bowel movement: Stools shock: Catastasis temporary loss of vision: Eyes sudden vision loss: Eyes partial loss of vision: Eyes no symptoms: Catastasis facial pain: Pains swollen blue-colored skin under the eyes: Eyes decreased sense of smell or taste: Catastasis red to brownish-gray colored patches: Skin small, raised bumps, which may leak fluid and crust over when scratched: Skin raw, sensitive skin from scratching: Skin burns or redness around the mouth and lips: Poison breath that smells like chemicals, such as gasoline or paint thinner: Poison lips or fingernails turn blue or gray: Catastasis difficulty speaking: Catastasis pain in the calf muscles when walking: Pains claudication: Pains decreased pulses in the feet: Heart weight changes including unintended loss or gain: Catastasis unexplained weight gain or loss: Catastasis changes to existing moles: Skin weak hand grip: Muscles hand weakness: Muscles purple or violet colored upper eyelids: Eyes purple-red skin rash: Skin purple skin splotches: Skin difficulty raising arms over head: Catastasis swollen tips of the fingers or toes: Tissues pain in tips of the fingers or toes: Pains red patches of skin covered with silvery scales: Skin small scaling spots: Skin buttocks pain: Pains pulsating feeling near the navel: Catastasis cold foot: Catastasis black or blue painful toe: Catastasis cold fingers and toes: Catastasis sequence of color changes in skin in response to cold or stress: Skin numb, prickly feeling or stinging pain upon warming or relief of stress: Catastasis claudication: Pains legs&#39; and feet&#39;s (arms and hands) pain affects even when you are at rest: Pains pain that may come and go in legs and feet or arms and hands: Pains inflammation along a vein just below the skin&#39;s surface (due to a blood clot in the vein): Tissues painful open sores on fingers and toes: Skin ulcers on the fingers or toes: Skin veins protrude or bulge from under the skin and feel ropey: Skin sores around varicose veins: Skin skin ulcers around varicose veins: Skin ongoing irritation, swelling, and painful rashes on the legs: Skin legs often ache and feel heavy and itchy: Pains burning or itching sensation in the legs: Pains distention of surface veins: Skin skin that feels warm to the touch: Skin skin warmth: Skin tight fitting rings or shoes: Skin infections in the extremity: Skin drainage in swollen areas: Skin heaviness of the limb: Muscles less flexibility: Muscles movement issues in an arm or leg: Muscles pain in arms, neck, jaw, shoulder or back accompanying chest pain: Heart gradual loss of peripheral vision, usually in both eyes: Eyes tunnel vision in the advanced stages: Eyes sudden onset of visual disturbance, often in low light: Eyes halos around lights: Eyes prosthetic heart valve replacement: Heart fewer PMS symptoms: Pregnancy dark hair growth in man-like places, on the lips, chest, and chin: Skin excess facial and body hair in woman: Skin excess androgen in woman: Skin severe adolescent acne in woman: Skin male-pattern baldness in woman: Skin androgenic alopecia in woman: Skin low sperm count: Sexual pain, lump, or swelling in the testicles: Sexual pain or discomfort in a testicle or the scrotum: Sexual small, firm testes: Sexual vaginal dryness: Sexual hot flashes: Sexual loss of breast fullness: Sexual increased abdominal fat: Abdomen tingling or burning in fingertips, toes and lips: Pains paresthesias: Pains twitching or spasms of muscles around mouth: Muscles patchy hair loss: Skin thinning of eyebrows: Skin loss of armpit or pubic hair: Skin stress: Cognitive problems too much exercises: Catastasis too much physical activities: Catastasis excessive exercise: Catastasis rectal pain: Pains feeling of stool urgency: Stools urgent need bowel movements: Stools bowel movements urgency: Stools feeling of constantly needing to pass stools: Stools tenesmus: Stools intestine ulcers: Abdomen having a sense of impending danger, panic or doom: Cognitive problems fear of loss of control or death: Cognitive problems feeling apprehensive: Cognitive problems feeling of extreme fright: Cognitive problems fright: Cognitive problems scare: Cognitive problems feel panic: Cognitive problems panic: Cognitive problems panic attack: Cognitive problems fear: Cognitive problems disfiguring skin sores may occur on nose, cheeks and ears: Skin trembling: Cognitive problems shiver: Cognitive problems tremors: Cognitive problems uncontrolled movements: Cognitive problems vaginal itching: Sexual fatty skin deposits over parts of the hands, elbows, knees, ankles, and around the cornea of the eye: Skin xanthomas: Skin cholesterol deposits in the eyelids: Eyes areas of skin may get darker or lighter in color: Skin skin that is abnormally dark or light: Skin nodules under skin: Skin skin thickening, stiffness, and tightness of fingers, hands, and forearm: Skin small white lumps beneath the skin, sometimes oozing a white substance that looks like toothpaste: Skin sores (ulcers) on the fingertips or toes: Skin tight and mask-like skin on the face: Skin wrist pain: Pains fingers pain: Pains problems controlling stools: Stools dry mouth: Oral mouth feels like it is full of cotton: Oral swollen salivary glands: Oral osteomalacia: Tissues malacosteon: Tissues soft bones: Tissues softening of the bones: Tissues rickets: Catastasis skeletal deformities: Tissues skeletal limb abnormalities: Tissues bowed legs: Tissues abnormally curved spine: Tissues thickened wrists and ankles: Tissues breastbone projection: Tissues abnormal bone size or shape and other skeletal irregularities: Tissues pain in the spine: Pains red, flat facial rash over the bridge of nose: Skin facial rash (&#34;butterfly rash&#34;): Skin brittle hair: Skin malaise: Catastasis poor health: Catastasis general sense of not feeling well: Catastasis feel unwell: Catastasis uneasiness: Catastasis general malaise: Catastasis vague feeling of illness: Catastasis feeling sick: Catastasis frequent complaints of illness with no apparent cause: Catastasis gangrene skin ranging from pale to blue, purple, black, bronze or red: Skin foul-smelling discharge leaking from a sore: Skin frostbite: Skin temperature regulation abnormalities: Catastasis temperature-regulating system problems: Catastasis dizziness on standing: Catastasis inability to have a bowel movement: Stools basal body temperature stays high: Pregnancy claw-like hands: Catastasis protrusion of the lower jaw so the lower teeth extend beyond the upper teeth: Oral small skin outgrowths: Skin skin tags: Skin snoring: Breathing sleep apnea: Breathing frequent brief interruptions in nighttime breathing: Breathing breathing intermittently stops during sleep: Breathing enlarged liver, heart, kidneys, spleen and other organs: Tissues increased sensitivity to the effects of alcohol: Pains pain in lymph nodes after drinking alcohol: Pains failure to release milk (in women): Sexual protruding tongue: Catastasis skin lesions on the back: Skin skin lesions on upper arms: Skin progressive loss of hearing: Catastasis carpal tunnel syndrome: Pains entrapment median neuropathy: Pains fullness: Catastasis general epigastric discomfort: Pains pain in upper middle abdomen: Pains left arm pain: Heart nail weakness: Tissues nail loss: Tissues blood underneath the nail: Blood fibro fog: Cognitive problems loss of mental clarity and problems with memory: Cognitive problems brain fog: Cognitive problems lapses in memory; word mix-ups and difficulty concentrating: Cognitive problems difficulty thinking clearly: Cognitive problems cravings for carbohydrate and chocolate: Appetite delayed reactions to physical exertion or stressful events: Cognitive problems morning stiffness: Pains diffuse swelling: Pains interstitial edema: Pains ringing ears: Ears earaches: Ears itchy ears: Ears pain in ears: Ears teeth grinding: Oral directional disorientation: Cognitive problems sensitivity to odors: Catastasis sensitivity to noise: Catastasis difficulty lifting the front part of foot and toes: Muscles tongue cramps and twitching: Muscles bullseye rash pattern: Skin chest pain under the rib cage: Pains lumps of tissue under the skin on the chest: Skin lumps of tissue in the abdomen: Skin electric-shock sensations that occur with certain head movements: Pains switch between constipation and diarrhea or mostly have one or the other: Stools diarrhea or constipation; sometimes even alternating bouts of constipation and diarrhea: Stools mucus in the stool: Stools gray hair: Skin go gray (hair): Skin loss of sensation in one or more areas of the body: Catastasis loss of fine motor skills, such as picking up objects: Muscles loss of muscle coordination: Muscles bladder and prostate gland can become inflamed: Urination thoughts of self-harm: Cognitive problems suicide: Cognitive problems red, painless skin spots on the palms and soles: Skin red, painful nodes in the pads of the fingers and toes: Skin Osler&#39;s nodes: Skin lump in neck: Pains ear infection: Ears cysts in the ear: Ears fluid that oozes from the ear: Ears pain in throat: Pains pain in neck: Pains stiff neck: Pains chalky stool: Stools bleeding from enlarged veins (varices) in the digestive tract: Blood variceal bleeding: Blood abdominal tenderness: Abdomen problems controlling urination: Urination urine leakage: Urination urine incontinence: Urination loss of urination control: Urination pain behind the eyes: Eyes cough may bring up mucus: Breathing coughing up yellow phlegm: Breathing cough that produces thick spit (sputum) and mucus: Breathing difficulty breathing when lying down: Breathing feel air hunger or drowning: Breathing feeling wakes from sleep and causes to sit up and try to catch breath: Breathing paroxysmal nocturnal dyspnea: Breathing grunting, gurgling, or wheezing sounds with breathing: Breathing weak, rapid, and thready pulse: Heart S3 gallop: Heart exophthalmos: Eyes visible pulsation of eyes: Eyes distention of neck veins: Skin sharp, piercing chest pain over the center or left side of your chest: Pains intestinal blockage: Abdomen bluish discoloration of the fingers: Catastasis afraid of gaining weight: Cognitive problems changed ability to feel pain, touch, pressure, or different temperatures: Catastasis difficulty writing or reading: Cognitive problems numbness or tingling on one side of the body: Muscles back pain between shoulder blades: Pains pain in right shoulder: Pains anal itching: Stools bright red blood on toilet tissue, stool, or in the toilet bowl: Stools painless bleeding during bowel movements: Stools lump near anus, which may be sensitive or painful: Stools swelling around your anus: Stools leakage of feces: Stools pain during bowel movements: Pains pain is often sudden, severe and located in the lower left side of the abdomen: Pains pain in upper arms: Pains stiffness in affected areas, particularly in the morning or after being inactive for a long time, such as a long car ride: Pains scalp tenderness: Pains scalp sensitivity: Pains scalp pain: Pains tenderness of the scalp: Pains pain in the jaw when repetitively chewing: Pains slowed movement: Catastasis bradykinesia: Catastasis decreased ability to perform unconscious movements: blinking, smiling or swinging arms when walking: Catastasis paroxysms (fits) of many, rapid coughs followed by a high-pitched &#34;whoop&#34;: Breathing paroxysms of intense coughing lasting up to several minutes occasionally followed by a loud whoop: Breathing painful and prolonged erection: Sexual small size at birth: Catastasis low birth weight: Catastasis blisters or ulcers on genitals: Skin sudden, sharp chest pain on the same side as the affected lung: Breathing chest pain doesn&#39;t worsen when breathe in and out: Breathing pathognomonic enanthem: Tissues wide or web-like neck: Turner Syndrome receding or small lower jaw: Turner Syndrome high, narrow roof of the mouth (palate): Turner Syndrome low-set ears: Turner Syndrome low hairline at the back of the head: Turner Syndrome drooping eyelids: Turner Syndrome broad chest with widely spaced nipples: Turner Syndrome short fingers and toes: Turner Syndrome arms that turn outward at the elbows (cubitus valgus): Turner Syndrome fingernails turned upward: Turner Syndrome inability to conceive a child without fertility treatment: Turner Syndrome short stature: Catastasis difficulty in social situations, such as problems understanding other people&#39;s emotions or reactions: Cognitive problems redness, throbbing and burning pain in the hands and feet: Pains impaired growth of body hair: Sexual decrease in beard and body hair growth: Sexual decrease in muscle mass: Muscles impaired growth of the penis and testicles: Sexual sudden collection of fluid in the scrotum: Sexual infertility: Sexual tongue biting: Tissues drooling and froth in mouth after night sleep: Catastasis person forgets what has happened at night sleep: Catastasis shaking of body or particular limb in sleep: Catastasis teeth clenching at night sleep: Catastasis muscle spasms resulting in jerks and twitches at night sleep: Muscles increase in daytime drowsiness: Catastasis wake up with headache after night sleep: Catastasis headache when getting up: Catastasis unwanted erection lasting more than four hours: Sexual rigid penile shaft, but usually soft tip of penis (glans): Sexual erection not related to sexual stimulation or persistent after stimulation: Sexual loose teeth when it would not expected or swollen gums: Oral .",
            "url": "https://vivianknee.github.io/VaseProject/week7/rapidapi",
            "relUrl": "/week7/rapidapi",
            "date": " • Oct 3, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Javascript and HTML",
            "content": "| JS Table | Using the JS Kernel | API | . Using HTML fragments and Javascript to build a table. . Click Me! .",
            "url": "https://vivianknee.github.io/VaseProject/frontend/jsTable",
            "relUrl": "/frontend/jsTable",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Using the Javascript Kernel",
            "content": "| JS Table | Using the JS Kernel | API | . . console.log output . &quot;Good Luck!&quot; is a parameter and console.log is a function the outputs the parameter into the console. . console.log(&quot;Good luck!&quot;); . Good luck! . console.log output showing use of variable . This is a sequence of code as there are two lines. msg is defined as a variable for the string which is then outputted to the console using the function console.log . var msg = &quot;Good Luck!&quot;; console.log(msg); . Good Luck! . console.log output showing use of a function . The function logIt(output) is defined within the {}. logIt(msg) is the line that calls back to the function and activates it. . function logIt(output) { console.log(output); } logIt(msg); . Good Luck! . Showing reuse of a function . I am now reusing the function in the previous cell blocks. This process is referred to as procedural abstraction . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;My name is Vivian!&quot;); logIt(&quot;Born in &quot; + 2006) . Reuse of logIT My name is Vivian! Born in 2006 . Dynamic or Loosely typed language (string, number) . Here, I define a new function to show how Javascript doesn&#39;t require me to specify what type of information will be stored in a variable in advance. Instead, the variable type is determined at runtime. . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); //&quot;typeof&quot; keyword returns the type. } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;Hello, I am graduating in&quot;); // String logItType(2024); // Number logItType([1, 2]); // Object is generic for this Array, which similar to Python List logItType(&quot;more years till I get my permit ahah&quot;) . Looking at dynamic nature of types in JavaScript string ; Hello, I am graduating in number ; 2024 object ; [ 1, 2 ] string ; more years till I get my permit ahah . Build a Person Function/Class object and JSON . // define a function to hold data for a Person function Person(name, ghID, classOf) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . Build a Classroom Array/List of Persons and JSON . Building an Array, &quot;var students&quot; is an array of many students | Building a Classroom, this show forEach iteration through an array and .push adding to an array | . // define a student Array of Person(s) var students = [ new Person(&quot;Vivian&quot;, &quot;vivanknee&quot;, 2024), new Person(&quot;Emma&quot;, &quot;e-shen&quot;, 2024), new Person(&quot;Amay&quot;, &quot;amayadvani&quot;, 2024), new Person(&quot;Sarah&quot;, &quot;sarahliu&quot;, 2024), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; }, Person { name: &#39;Vivian&#39;, ghID: &#39;vivanknee&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Emma&#39;, ghID: &#39;e-shen&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Amay&#39;, ghID: &#39;amayadvani&#39;, classOf: 2024, role: &#39;Student&#39; }, Person { name: &#39;Sarah&#39;, ghID: &#39;sarahliu&#39;, classOf: 2024, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . IJavaScript and Table formatting using toHTML method . This example builds a Classroom method _toHTML which is passed to the IJavaScript interpreter:$$.html which renders output similarly to a real website.&gt; &gt;JavaScript in the _toHTML method is broken into three parts... . Style part is building CSS inline formatting | Body part is constructing the Table Rows (tr), Table Headings (th), and Table Data (td). The table data is obtained from a Classroom object. The JavaScript for loop allows the construction of a new row of data for each person object in the Array. | Return part creates the HTML fragment for rendering | . The last line:$$.html is IJavaScript HTML interpreter and by passing the parameter of the _toHTML method it obtains HTML to render . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid blue;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Name&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;GitHub ID&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;strong&gt;&quot; + &quot;Role&quot; + &quot;&lt;/strong&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGitHub IDClass OfRole . Mr M | jm1021 | 1977 | Teacher | Vivian | vivanknee | 2024 | Student | Emma | e-shen | 2024 | Student | Amay | amayadvani | 2024 | Student | Sarah | sarahliu | 2024 | Student | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://vivianknee.github.io/VaseProject/week5/jsKernel",
            "relUrl": "/week5/jsKernel",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Big Idea Project",
            "content": ". Create Task Plan .",
            "url": "https://vivianknee.github.io/VaseProject/markdown/week5/2022/09/21/bigidea.html",
            "relUrl": "/markdown/week5/2022/09/21/bigidea.html",
            "date": " • Sep 21, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Lists and Dictionaries",
            "content": "Variables . Variables all have a type:String, Integer, Float, List and Dictionary are some key types. . name = &quot;Vivian Ni&quot; print(&quot;name&quot;, name, type(name)) print() # variable of type integer age = 16 print(&quot;age&quot;, age, type(age)) print() # variable of type float score = 3.00 print(&quot;score&quot;, score, type(score)) print() # variable of type list (many values in one variable) langs = [&quot;Python&quot;, &quot;JavaScript&quot;, &quot;Java&quot;, &quot;bash&quot;] print(&quot;langs&quot;, langs, type(langs), &quot;length&quot;, len(langs)) print(&quot;- langs[3]&quot;, langs[3], type(langs[3])) print() # variable of type dictionary (a group of keys and values) person = { &quot;name&quot;: name, &quot;age&quot;: age, &quot;score&quot;: score, &quot;langs&quot;: langs } print(&quot;person&quot;, person, type(person), &quot;length&quot;, len(person)) print(&#39;- person[&quot;name&quot;]&#39;, person[&quot;name&quot;], type(person[&quot;name&quot;])) . name Vivian Ni &lt;class &#39;str&#39;&gt; age 16 &lt;class &#39;int&#39;&gt; score 3.0 &lt;class &#39;float&#39;&gt; langs [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;] &lt;class &#39;list&#39;&gt; length 4 - langs[3] bash &lt;class &#39;str&#39;&gt; person {&#39;name&#39;: &#39;Vivian Ni&#39;, &#39;age&#39;: 16, &#39;score&#39;: 3.0, &#39;langs&#39;: [&#39;Python&#39;, &#39;JavaScript&#39;, &#39;Java&#39;, &#39;bash&#39;]} &lt;class &#39;dict&#39;&gt; length 4 - person[&#34;name&#34;] Vivian Ni &lt;class &#39;str&#39;&gt; . List of Dictionaries . this code appends the dictionaries to the list, the list being infoDb. As you can see, 2 dictionaries have been appended. . infoDb = [] # Append to List a Dictionary of key/values infoDb.append({ &quot;FirstName&quot;: &quot;Vivian&quot;, &quot;LastName&quot;: &quot;Ni&quot;, &quot;DOB&quot;: &quot;May 13&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Movie&quot;: &quot;Inception&quot;, &quot;Email&quot;: &quot;vivianni452@gmail.com&quot;, &quot;Best_Treats&quot;: [&quot;cookies&quot;, &quot;ice cream&quot;, &quot;cake&quot;, &quot;brownies&quot;] }) infoDb.append({ &quot;FirstName&quot;: &quot;Emma&quot;, &quot;LastName&quot;: &quot;Shen&quot;, &quot;DOB&quot;: &quot;July 29&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;aimashen.2017@gmail.com&quot;, &quot;Fav_Movie&quot;: &quot;MIB&quot;, &quot;Best_Treats&quot;: [&quot;smoothies&quot;, &quot;ice cream&quot;] }) # Print the data structure print(infoDb) . [{&#39;FirstName&#39;: &#39;Vivian&#39;, &#39;LastName&#39;: &#39;Ni&#39;, &#39;DOB&#39;: &#39;May 13&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Movie&#39;: &#39;Inception&#39;, &#39;Email&#39;: &#39;vivianni452@gmail.com&#39;, &#39;Best_Treats&#39;: [&#39;cookies&#39;, &#39;ice cream&#39;, &#39;cake&#39;, &#39;brownies&#39;]}, {&#39;FirstName&#39;: &#39;Emma&#39;, &#39;LastName&#39;: &#39;Shen&#39;, &#39;DOB&#39;: &#39;July 29&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;aimashen.2017@gmail.com&#39;, &#39;Fav_Movie&#39;: &#39;MIB&#39;, &#39;Best_Treats&#39;: [&#39;smoothies&#39;, &#39;ice cream&#39;]}] . For Loop for output of List/Dictionary . takes the dictionaries in the list and prints them . def for_loop(): print(&quot;For loop output n&quot;) for record in infoDb: print(record) for_loop() . For loop output {&#39;FirstName&#39;: &#39;Vivian&#39;, &#39;LastName&#39;: &#39;Ni&#39;, &#39;DOB&#39;: &#39;May 13&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Fav_Movie&#39;: &#39;Inception&#39;, &#39;Email&#39;: &#39;vivianni452@gmail.com&#39;, &#39;Best_Treats&#39;: [&#39;cookies&#39;, &#39;ice cream&#39;, &#39;cake&#39;, &#39;brownies&#39;]} {&#39;FirstName&#39;: &#39;Emma&#39;, &#39;LastName&#39;: &#39;Shen&#39;, &#39;DOB&#39;: &#39;July 29&#39;, &#39;Residence&#39;: &#39;San Diego&#39;, &#39;Email&#39;: &#39;aimashen.2017@gmail.com&#39;, &#39;Fav_Movie&#39;: &#39;MIB&#39;, &#39;Best_Treats&#39;: [&#39;smoothies&#39;, &#39;ice cream&#39;]} . Alternate Methods of Iteration . Formatted Output of Dictionaries: Using For Loop with an Index . this code uses a for loop with the range and index syntax to print the dictionaries. It also does so in reverse order . Formatted output of Dictionary Managing data in Lists and Dictionaries is for the convenience of passing the data across the internet or preparing it to be stored into a database. Also, it is a great way to exchange data inside of our own programs. . Next, we will take the stored data and output it within our notebook. There are multiple steps to this process. . Preparing a function to format the data, the print_data() function receives a parameter called &quot;d_rec&quot; short for dictionary record. It then references different keys within [] square brackets. Preparing a function to iterate through the list, the for_loop() function uses an enhanced for loop that pull record by record out of InfoDb until the list is empty. Each time through the loop it call print_data(record), which passes the dictionary record to that function. Finally, you need to activate your function with the call to the defined function for_loop(). Functions are defined, not activated until they are called. By placing for_loop() at the left margin the function is activated. . def print_data(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Favorite Movie&quot;, d_rec[&quot;Fav_Movie&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print(&quot; t&quot;, &quot;Best Treats: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Best_Treats&quot;])) # join allows printing a string list with separator print() # for loop iterates on length of InfoDb def for_loop(): print(&quot;For loop with index output n&quot;) length = len(infoDb) #figures out the length of the list infoDb (which is 2 because there are 2 dictionaries in the list) ran = range(length) #defines ran as the range of the length. (this is 0 and 1 because the length is 2) for index in reversed(ran): #index is 0 and 1 so it takes the indexes of infoDb. 0 would be the first dictionary and 1 would be the second. reversed prints them as 1 0 instead of 0 1 print_data(infoDb[index]) for_loop() . For loop with index output Emma Shen Residence: San Diego Birth Day: July 29 Favorite Movie MIB Email: aimashen.2017@gmail.com Best Treats: smoothies, ice cream Vivian Ni Residence: San Diego Birth Day: May 13 Favorite Movie Inception Email: vivianni452@gmail.com Best Treats: cookies, ice cream, cake, brownies . While Loop . contains a while loop, &quot;while i &lt; len(InfoDb):&quot;. This counts through the elements in the list start at zero, and passes the record to print_data() . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(infoDb): #length is 2 so while i is less than, it will keep printing record = infoDb[i] #defines the record as the index of the list print_data(record) #prints that index using the formatted print function i += 1 #adds 1 and returns to the top till i is no longer &lt;2 return while_loop() . While loop output Vivian Ni Residence: San Diego Birth Day: May 13 Favorite Movie Inception Email: vivianni452@gmail.com Best Treats: cookies, ice cream, cake, brownies Emma Shen Residence: San Diego Birth Day: July 29 Favorite Movie MIB Email: aimashen.2017@gmail.com Best Treats: smoothies, ice cream . Recursion . this method calls itself repeatedly until the &quot;if i &lt; len(infoDb)&quot; is no longer true. the recursive_loop(0) is set at the start and it keeps activating a new call as recursive_loop(i + 1) . def recursive_loop(i): if i &lt; len(infoDb): #ensures the code stops after it recurses through all the indexes since length determines amount of indexes record = infoDb[i] #defines record as the index of infoDb print_data(record) #prints using the formatted print function recursive_loop(i + 1) #adds 1 to the original index and returns until i is no longer &lt;2 return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Vivian Ni Residence: San Diego Birth Day: May 13 Favorite Movie Inception Email: vivianni452@gmail.com Best Treats: cookies, ice cream, cake, brownies Emma Shen Residence: San Diego Birth Day: July 29 Favorite Movie MIB Email: aimashen.2017@gmail.com Best Treats: smoothies, ice cream . Using Input to Add/Search/Delete Dictionaries . from asyncio.windows_events import NULL infoDb = [] infoDb.append({ &quot;FirstName&quot;: &quot;Vivian&quot;, &quot;LastName&quot;: &quot;Ni&quot;, &quot;DOB&quot;: &quot;May 13&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Fav_Movie&quot;: &quot;Inception&quot;, &quot;Email&quot;: &quot;vivianni452@gmail.com&quot;, }) infoDb.append({ &quot;FirstName&quot;: &quot;Hanli&quot;, &quot;LastName&quot;: &quot;Ni&quot;, &quot;DOB&quot;: &quot;Jan 11&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;hanlini@gmail.com&quot;, &quot;Fav_Movie&quot;: &quot;Interstellar&quot;, }) def print_data2(d_rec): #formatting print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Favorite Movie:&quot;, d_rec[&quot;Fav_Movie&quot;]) print(&quot; t&quot;, &quot;Email:&quot;, d_rec[&quot;Email&quot;]) print() def data_entry(): #defining the function that asks for user input Firstname = input(&quot;What is your firstname?&quot;) Lastname = input(&quot;What is your lastname&quot;) DOB = input(&quot;When is your birthday&quot;) Email = input(&quot;What is your Email&quot;) Movie = input(&quot;What is your favorite movie?&quot;) Residence = input(&quot;Where do you live?&quot;) infoDb.append({ #appends the user input to the dictionary &quot;FirstName&quot;: Firstname, &quot;LastName&quot;: Lastname, &quot;DOB&quot;: DOB, &quot;Email&quot;: Email, &quot;Residence&quot;: Residence, &quot;Fav_Movie&quot;: Movie, }) def search_data(firstname): for record in infoDb: if record[&quot;FirstName&quot;] == firstname: #compares the already existing name to the name inputted with the firstname variable return record return NULL def data_delete(firstname): record = search_data(firstname) #defines record as the name inputted with the search function if (record != NULL): #if the record doesn&#39;t equal null (does it exist?) then the next line removes it infoDb.remove(record) print(firstname, &quot;has been deleted!&quot;) else: print(&quot;Record not found!&quot;) def main(): Continue = True #defining continue as true while Continue: lol = input(&quot;What would you like to do (add/search/delete, type no if you want to exit)?&quot;) if lol == &quot;no&quot;: print(&quot;Come back again!&quot;) Continue = False elif lol == &quot;add&quot;: data_entry() elif lol == &quot;search&quot;: firstname = input(&quot;Who do you want to search (firstname)?&quot;) record = search_data(firstname) #defines record as the input &quot;name&quot; and runs it through the search function print_data2(record) elif lol == &quot;delete&quot;: firstname = input(&quot;Who do you want to delete(firstname)&quot;) data_delete(firstname) else: print(&quot;Invalid input. Please try again&quot;) length = len(infoDb) #defines length as the number of records print(&quot;Total Number of Records: &quot;, length) for record in infoDb: print_data2(record) main() . Hanli is deleted! Come back again! Total Number of Records: 2 Vivian Ni Residence: San Diego Birth Day: May 13 Favorite Movie Inception Email: vivianni452@gmail.com Emma Shen Residence: San Diego Birth Day: July Favorite Movie Not sure Email: aimashen.2017@gmail.com . Quiz that stores in a List of Dictionaries . questions = 5 correct = 0 print(&quot;Take this fun quiz on food!&quot;) def question_and_answer(prompt, answer): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) if answer == msg.lower(): print(&quot;Correct!&quot;) global correct correct += 1 else: print (&quot;Incorrect!&quot;) return msg Q1 = question_and_answer(&quot;Which famous soft drink was invented in 1892?? t Coca cola t pepsi t rootbeer&quot;, &quot;coca cola&quot;) Q2 = question_and_answer(&quot;What was the first food eaten in space? t applesauce t icecream t mashed potatoes&quot;, &quot;applesauce&quot;) Q3 = question_and_answer(&quot;Where were French fries invented? t France t America t Belgium&quot;, &quot;Belgium&quot;) Q4 = question_and_answer(&quot;What is the USA’s favorite flavor of ice cream? t chocolate t vanilla t strawberry&quot;, &quot;vanilla&quot;) Q5 = question_and_answer(&quot;What is the most popular pizza topping in the USA? t pepperoni t sausage t olives&quot;, &quot;pepperoni&quot;) print(f&#39;You scored {correct} /5 correct answers!&#39;) Quiz = { &quot;Question 1&quot;: Q1, &quot;Question 2&quot;: Q2, &quot;Question 3&quot;: Q3, &quot;Question 4&quot;: Q4, &quot;Question 5&quot;: Q5 } print(&quot;Here is a record of your quiz answers:&quot;,Quiz) . Take this fun quiz on food! Question: Which famous soft drink was invented in 1892?? Coca cola pepsi rootbeer Answer: coca cola Correct! Question: What was the first food eaten in space? applesauce icecream mashed potatoes Answer: applesauce Correct! Question: Where were French fries invented? France America Belgium Answer: belgium Incorrect! Question: What is the USA’s favorite flavor of ice cream? chocolate vanilla strawberry Answer: vanilla Correct! Question: What is the most popular pizza topping in the USA? pepperoni sausage olives Answer: pepperoni Correct! You scored 4 /5 correct answers! Here is a record of your quiz answers: {&#39;Question 1&#39;: &#39;coca cola&#39;, &#39;Question 2&#39;: &#39;applesauce&#39;, &#39;Question 3&#39;: &#39;belgium&#39;, &#39;Question 4&#39;: &#39;vanilla&#39;, &#39;Question 5&#39;: &#39;pepperoni&#39;} .",
            "url": "https://vivianknee.github.io/VaseProject/jupyter/week2/2022/08/30/lists.html",
            "relUrl": "/jupyter/week2/2022/08/30/lists.html",
            "date": " • Aug 30, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master - badges: true - comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . place a #collapse-output flag at the top of any cell if you want to put the output under a collapsable element that is closed by default, but give the reader the option to open it: . print(&#39;The comment #collapse-output was used to collapse the output of this cell by default but you can expand it.&#39;) . The comment #collapse-output was used to collapse the output of this cell by default but you can expand it. . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(df).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(df).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( alt.X(&#39;Rotten_Tomatoes_Rating&#39;, type=&#39;quantitative&#39;), alt.Y(&#39;IMDB_Rating&#39;, type=&#39;quantitative&#39;, axis=alt.Axis(minExtent=30)), # y=alt.Y(&#39;IMDB_Rating:Q&#39;, ), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=500, height=400 ) . Example 3: More Tooltips . label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=500, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . GitHub Flavored Emojis . Typing I give this post two :+1:! will render this: . I give this post two :+1:! . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://vivianknee.github.io/VaseProject/jupyter/2020/02/20/test.html",
            "relUrl": "/jupyter/2020/02/20/test.html",
            "date": " • Feb 20, 2020"
        }
        
    
  
    
        ,"post6": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://vivianknee.github.io/VaseProject/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  

  
  
      ,"page0": {
          "title": "APCSP Blog",
          "content": "Week Sprint Review Ticket Summary . 7 | API | Review Ticket 7 | I learned how to format and pull data from an API. I also took notes on my collegeboard MC quizzes | . 6 | Deployment | N/A | We worked with AWS | . 5 | UI Starters | Review Ticket 5 | This week we learned how to use HTML Fragments and Javascript to create objects, arrays, and datatables. Here is me using Javascript with Jupyter notebook and the kernel. I also made a separate javascript table to show what books I like. Finally, I made a frontend table using HTML. | . 4 | Python Web Server Project | Review Ticket 4 | In the video I made for week 4, I go over my CSP Journey and takeaways from the psychology video as well as the process I took to do my local server | . 3 | Creative Development | Review Ticket 3 | This week, we focused on creating a sample create task in preparation for the AP exam using javascript and code.org app lab. Here is the blog I wrote during the process. | . 2 | Data Abstraction | Review Ticket 2 | This week we started learning about Lists, Dictionaries, and Iterations and how to store data with them. We learned how to print and format dictionaries as well as do other more advanced things with them. In addition, we also messed around with html and the themes of our website. For example we applied a dark mode css file which changed the entire look of the site. | . 1 | Intro to Python | Review Ticket 1 | This week was super busy and more code heavy. Specifically, we began using python and bash. Using python, we made a Python Quiz and with bash we created a Bash Tool Check. The bash tool check made sure that we had all the necessary programs installed. This week was also an opportunity to personalize our website so I made a page consisting of My Art with Images and Tables. Finally, we had to show proof of our blogging both in csp which I did through APCSP Vocab and for Schoolwork outside of csp. | . 0 | Tool Setup | Review Ticket 0 | We learned how to make our first markdown posts and jupyter notebooks. My first makedown post was my About Me and my First Post. In order to do this, we had to set up wsl, vscode, and download numerous other programs like anaconda, bash, python, and more. | .",
          "url": "https://vivianknee.github.io/VaseProject/_pages/002apcspblog.html",
          "relUrl": "/_pages/002apcspblog.html",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This website is powered by Vivian . Who am I? . . . My name is Vivian and I am a junior at Del Norte High School. I love going to the beach, reading a good book, and walking my dog. I believe that peanut butter cookies are the best cookie (no rebuttal). Some of my hobbies include graphic design, digital art, and cybersecurity :) . What I&#39;m Passionate About . . I am part of the CyberAegis team and participate in Cyberpatriot competitions I enjoy graphic design and marketing and am a marketing coordinator for SAGE, a nonprofit organization I enjoy doing research on subjects I&#39;m interested in. I recently attended a research program at UCSD . | | | .",
          "url": "https://vivianknee.github.io/VaseProject/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Vocab",
          "content": "AP CSP Vocabulary Notes . Vocabulary . input = instructions you give to a computer | sequence = several lines of code together | output = the information the computer gives to you | key (name) --&gt; value (Vivian) | Variables: a way to name, store, data and reference data. Lists and Dictionaries are variables with extended features for storing and retrieving data. Lists, think of [] square brackets, are a way of grouping data in an ordered sequence | Dictionaries, think of {} curly braces, are a way of grouping data into in key-value relationships | . | Concatenation: the operation of joining two strings together | static text: text that does not change. for example, a string | . Linux/Ubuntu Commands . pwd = print working directory | mkdir = make directory | cd = change directory | ls = list directory &lt;/ul&gt; | | .",
          "url": "https://vivianknee.github.io/VaseProject/Vocab/",
          "relUrl": "/Vocab/",
          "date": ""
      }
      
  

  

  

  
      ,"page5": {
          "title": "Frontend",
          "content": "| JS Table | Using the JS Kernel | API | .",
          "url": "https://vivianknee.github.io/VaseProject/_pages/Frontend.html",
          "relUrl": "/_pages/Frontend.html",
          "date": ""
      }
      
  

  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page13": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://vivianknee.github.io/VaseProject/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}